generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  ext_expires_in    Int?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String      @id @default(cuid())
  firstName       String?
  lastName        String?
  connections     String?
  bio             String?     @db.Text
  volunteering    String?
  skills          String?
  recommendations String?
  courses         String?
  projects        String?
  awards          String?
  languages       String?
  email           String?     @unique
  emailVerified   DateTime?
  phone           String?     @unique
  image           String?     @db.Text
  education       Education[]
  job             Job[]
  accounts        Account[]
  sessions        Session[]
}

model Job {
  jobId       String  @id @default(cuid())
  userId      String
  title       String?
  company     String?
  location    String?
  startDate   String?
  endDate     String?
  description String? @db.Text
  User        User    @relation(fields: [userId], references: [id])
}

model Education {
  educationId String  @id @default(cuid())
  userId      String
  school      String?
  location    String?
  degree      String?
  startDate   String?
  endDate     String?
  description String? @db.Text
  User        User    @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
